(()=>{"use strict";const e=[],t=[],s=[];class n{constructor(){this.currentTasks=t,this.pinnedTasks=s}renderTasksWrapper(){this.container=document.querySelector(".container"),this.tasksWrapper=document.createElement("div"),this.tasksWrapper.classList.add("tasks-wrapper"),this.container.appendChild(this.tasksWrapper),this.pinnedTasks=document.createElement("div"),this.pinnedTasks.classList.add("pinned-tasks"),this.tasksWrapper.appendChild(this.pinnedTasks);const e=document.createElement("p");e.classList.add("pinned-text"),e.textContent="No pinned tasks";const t=document.createElement("h2");t.textContent="Pinned:",t.classList.add("task-title"),this.pinnedTasks.insertAdjacentElement("afterbegin",t),this.pinnedTasks.appendChild(e),this.allTasks=document.createElement("div"),this.allTasks.classList.add("all-tasks"),this.tasksWrapper.appendChild(this.allTasks);const s=document.createElement("h2");s.textContent="All Tasks:",s.classList.add("task-title"),this.allTasks.insertAdjacentElement("afterbegin",s)}renderTasks(){const e=document.querySelector(".all-tasks");this.clear(),this.currentTasks.forEach((t=>{e.appendChild(t.createNewTask())}))}addPinTask(e){const t=document.querySelector(".all-tasks"),s=document.querySelector(".pinned-tasks");e.target.closest(".all-tasks")?this.currentTasks.forEach(((e,n)=>{if(!0===e.isPinned){this.pinnedTasks.push(e),this.currentTasks.splice(n,1);const a=t.children;t.removeChild(a[n+1]);const i=this.pinnedTasks.at(-1);s.appendChild(i.createPinTask()),this.removePinnedText()}})):this.pinnedTasks.forEach(((e,n)=>{if(!1===e.isPinned){this.currentTasks.push(e),this.pinnedTasks.splice(n,1);const a=s.children;s.removeChild(a[n+1]);const i=this.currentTasks.at(-1);t.appendChild(i.createNewTask()),this.addPinnedText()}}))}removePinnedText(){const e=document.querySelector(".pinned-text");e&&e.remove()}addPinnedText(){if(0===this.pinnedTasks.length){const e=document.querySelector(".pinned-tasks"),t=document.createElement("p");t.classList.add("pinned-text"),t.textContent="No pinned tasks",e.appendChild(t)}}clear(){const e=document.querySelectorAll(".all-tasks .task"),t=document.querySelector(".all-task-text");t&&t.remove();for(const t of e)t.remove()}}class a{constructor(e){this.taskName=e,this.isPinned=!1,this.onCheckboxClick=this.onCheckboxClick.bind(this),this.tasksWraper=new n}createNewTask(){const e=document.createElement("div");e.classList.add("task");const t=document.createElement("p");return t.classList.add("task-title"),t.textContent=this.taskName,this.pinnedButton=document.createElement("input"),this.pinnedButton.classList.add("pinned-button"),this.pinnedButton.setAttribute("type","checkbox"),e.append(t,this.pinnedButton),this.pinnedButton.addEventListener("click",this.onCheckboxClick),e}createPinTask(){const e=document.createElement("div");e.classList.add("task");const t=document.createElement("p");return t.classList.add("task-title"),t.textContent=this.taskName,this.pinnedButton=document.createElement("input"),this.pinnedButton.classList.add("pinned-button"),this.pinnedButton.setAttribute("type","checkbox"),this.pinnedButton.checked=!0,this.isPinned=!0,e.append(t,this.pinnedButton),this.pinnedButton.addEventListener("click",this.onCheckboxClick),e}onCheckboxClick(e){this.pinnedButton.checked?(this.isPinned=!0,this.tasksWraper.addPinTask(e)):(this.isPinned=!1,this.tasksWraper.addPinTask(e))}}class i{renderError(){const e=document.querySelector("body"),t=document.createElement("div");t.classList.add("error-wrapper"),t.textContent="Ошибка, нельзя добавить пустое поле";const s=document.createElement("button");s.classList.add("close-btn"),s.textContent="X",t.appendChild(s),e.appendChild(t),s.addEventListener("click",this.onCloseError)}onCloseError(){document.querySelector(".error-wrapper").remove()}}class r{constructor(){this.currentTasks=t,this.allTasks=e,this.taskWrapper=new n}renderSearchFilter(){const e=document.querySelector(".container");this.searchField=document.createElement("input"),this.searchField.classList.add("search-field"),this.searchField.setAttribute("type","search"),e.appendChild(this.searchField),this.addNewTask()}addNewTask(){this.searchField.addEventListener("keydown",(e=>{if("Enter"===e.key){if(""===this.searchField.value){return void(new i).renderError()}const e=new a(this.searchField.value);this.currentTasks.push(e),this.allTasks.push(e),this.taskWrapper.renderTasks(),this.searchField.value=""}}))}}(new class{constructor(){this.searchFilter=new r,this.tasksWrapper=new n}renderContainer(){const e=document.querySelector("body"),t=document.createElement("div");t.classList.add("container");const s=document.createElement("h1");s.classList.add("title"),s.textContent="Top Tasks",e.appendChild(t),t.appendChild(s),this.searchFilter.renderSearchFilter(),this.tasksWrapper.renderTasksWrapper()}}).renderContainer(),function(){const e=document.querySelector(".search-field");e.addEventListener("input",(()=>{const s=e.value.toLowerCase(),n=t.filter((e=>e.taskName.toLowerCase().includes(s))),a=document.querySelector(".all-tasks"),i=document.querySelector(".all-task-text");if(function(){const e=document.querySelectorAll(".all-tasks .task");for(const t of e)t.remove()}(),0===n.length){if(!i){const e=document.createElement("p");e.classList.add("all-task-text"),e.textContent="No tasks found",a.appendChild(e)}}else i&&i.remove(),n.forEach((e=>{a.appendChild(e.createNewTask())}))}))}()})();